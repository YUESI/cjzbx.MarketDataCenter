package org.yuesi.cjzbx.datacenter.model.mapper;

import java.util.Date;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;
import org.yuesi.cjzbx.datacenter.model.MarketTradeDaily;

public interface MarketTradeDailyMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table market_tradedaily
     *
     * @mbg.generated Thu Jun 01 23:41:29 CST 2017
     */
    @Delete({
        "delete from market_tradedaily",
        "where tradedate = #{tradedate,jdbcType=DATE}",
          "and codeid = #{codeid,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(@Param("tradedate") Date tradedate, @Param("codeid") String codeid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table market_tradedaily
     *
     * @mbg.generated Thu Jun 01 23:41:29 CST 2017
     */
    @Insert({
        "insert into market_tradedaily (tradedate, codeid, ",
        "open, high, low, ",
        "close, volume, amount)",
        "values (#{tradedate,jdbcType=DATE}, #{codeid,jdbcType=VARCHAR}, ",
        "#{open,jdbcType=DECIMAL}, #{high,jdbcType=DECIMAL}, #{low,jdbcType=DECIMAL}, ",
        "#{close,jdbcType=DECIMAL}, #{volume,jdbcType=BIGINT}, #{amount,jdbcType=BIGINT})"
    })
    int insert(MarketTradeDaily record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table market_tradedaily
     *
     * @mbg.generated Thu Jun 01 23:41:29 CST 2017
     */
    @InsertProvider(type=MarketTradeDailySqlProvider.class, method="insertSelective")
    int insertSelective(MarketTradeDaily record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table market_tradedaily
     *
     * @mbg.generated Thu Jun 01 23:41:29 CST 2017
     */
    @Select({
        "select",
        "tradedate, codeid, open, high, low, close, volume, amount",
        "from market_tradedaily",
        "where tradedate = #{tradedate,jdbcType=DATE}",
          "and codeid = #{codeid,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="tradedate", property="tradedate", jdbcType=JdbcType.DATE, id=true),
        @Result(column="codeid", property="codeid", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="open", property="open", jdbcType=JdbcType.DECIMAL),
        @Result(column="high", property="high", jdbcType=JdbcType.DECIMAL),
        @Result(column="low", property="low", jdbcType=JdbcType.DECIMAL),
        @Result(column="close", property="close", jdbcType=JdbcType.DECIMAL),
        @Result(column="volume", property="volume", jdbcType=JdbcType.BIGINT),
        @Result(column="amount", property="amount", jdbcType=JdbcType.BIGINT)
    })
    MarketTradeDaily selectByPrimaryKey(@Param("tradedate") Date tradedate, @Param("codeid") String codeid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table market_tradedaily
     *
     * @mbg.generated Thu Jun 01 23:41:29 CST 2017
     */
    @UpdateProvider(type=MarketTradeDailySqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(MarketTradeDaily record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table market_tradedaily
     *
     * @mbg.generated Thu Jun 01 23:41:29 CST 2017
     */
    @Update({
        "update market_tradedaily",
        "set open = #{open,jdbcType=DECIMAL},",
          "high = #{high,jdbcType=DECIMAL},",
          "low = #{low,jdbcType=DECIMAL},",
          "close = #{close,jdbcType=DECIMAL},",
          "volume = #{volume,jdbcType=BIGINT},",
          "amount = #{amount,jdbcType=BIGINT}",
        "where tradedate = #{tradedate,jdbcType=DATE}",
          "and codeid = #{codeid,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(MarketTradeDaily record);
}